#깊이 우선 탐색, 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘.
#그래프 표현 방식에는 인접 행렬과 인접 라스트가 존재한다.
#인접 행렬: 2차원 배열로 그래프 연결관계를 표현하고, 메모리 효율은 떨어지는 반면 속도는 빠름
#인접 리스트: 리스트로 그래프 연결 관계를 표현하고, 속도는 느린 반면 메모리 효율은 좋음.

#인접 행렬 방식 예제
INF = 999999999
#연결되어 있지 않는 노드들끼린 무한의 연결 비용이 들어간다고 정의함.
graph = [
    [0,7,5], #0노드
    [7,0,INF], #1노드
    [5,INF,0] #2노드
]
print(graph)

#인접 리스트 방식 예제
#행이 3개인 2차원 리스트로 연결 리스트 표현
graph = [[] for i in range(3)]

#노드 0에 연결된 노드 정보 저장(노드, 거리)
graph[0].append((1,7))
graph[0].append((2,5))
#노드 1에 연결된 노드 정보 저장(노드, 거리)
graph[1].append((0,7))
#노드 2에 연결된 노드 정보 저장(노드, 거리)
graph[2].append((0,5))
print(graph)